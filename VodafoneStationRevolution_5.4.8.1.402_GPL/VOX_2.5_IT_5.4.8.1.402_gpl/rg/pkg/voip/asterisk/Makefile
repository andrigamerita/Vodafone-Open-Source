ifndef JMKE_ENV_INCLUDED
  JMK_ROOT=../../..
  include $(JMK_ROOT)/jmk/env_root.mak
endif

include $(JMK_ROOT)/pkg/voip/asterisk/common.mak

JMK_ARCHCONFIG_FIRST_TASKS+=$(JMKE_PWD_BUILD)/prototypes.h \
  $(JMKE_PWD_BUILD)/ast_modules.h

# Note: AST_MODULES_* are used with += all along other asterisk subdirs.
# When we will start doing the work, the varaibles will contain all subdirs
# information.
$(JMKE_PWD_BUILD)/prototypes.h:
	@echo "/* This file is automatically generated */" > $@
	$(foreach module, $(AST_MODULES_NO_RELOAD), \
	    echo MODULE_FUNCTIONS_NO_RELOAD\($(module)\) >> $@; )
	$(foreach module, $(AST_MODULES_WITH_RELOAD), \
	    echo MODULE_FUNCTIONS_WITH_RELOAD\($(module)\) >> $@; )
	$(foreach module, $(AST_MODULES_WITH_RELOAD_IF_CHANGED), \
	    echo MODULE_FUNCTIONS_WITH_RELOAD_IF_CHANGED\($(module)\) >> $@; )

$(JMKE_PWD_BUILD)/ast_modules.h:
	@echo "/* This file is automatically generated */" > $@
	$(foreach module, $(AST_MODULES_NO_RELOAD), \
	    echo M_NO_RELOAD\($(module)\), >> $@; )
	$(foreach module, $(AST_MODULES_WITH_RELOAD), \
	    echo M_WITH_RELOAD\($(module)\), >> $@; )
	$(foreach module, $(AST_MODULES_WITH_RELOAD_IF_CHANGED), \
	    echo M_WITH_RELOAD_IF_CHANGED\($(module)\), >> $@; )

ASTERISK_BUILDDIR=$(JMKE_BUILDDIR)/pkg/voip/asterisk

JMK_TARGET=asterisk
JMK_RAMDISK_BIN_FILES+=$(JMK_TARGET)

# XXX: Do we need the -E as a linker flag? We don't have dlopen any longer...
JMK_LDFLAGS+=-Wl,-E
JMK_LIBS+= $(JMKE_BUILDDIR)/pkg/util/libopenrg_gpl.so __local_m __local_resolv \
  __local_pthread $(ASTERISK_BUILDDIR)/db1-ast/libdb1.a \
  $(ASTERISK_BUILDDIR)/channels/libchannels.a \
  $(ASTERISK_BUILDDIR)/editline/libeditline.a \
  $(ASTERISK_BUILDDIR)/stdtime/libtime.a $(ASTERISK_BUILDDIR)/apps/libapps.a \
  $(ASTERISK_BUILDDIR)/res/libres.a $(ASTERISK_BUILDDIR)/pbx/libpbx.a \

ifdef CONFIG_RG_VODAFONE_ACTIVATION_WIZARD
  JMK_LIBS+=$(JMKE_BUILDDIR)/pkg/libxml/libxml2.a \
    $(JMKE_BUILDDIR)/pkg/dslhome/ipc/libcwmp_ipc_client.a
endif
  
ifdef CONFIG_RG_VOIP_CALL_LOG
  JMK_LIBS+=$(ASTERISK_BUILDDIR)/cdr/libcdr.a
endif
  
ifdef CONFIG_RG_VOIP_ASTERISK_H323
  JMK_LIBS+=$(JMKE_BUILDDIR)/pkg/voip/openh323/libh323_linux_r.so \
    $(JMKE_BUILDDIR)/pkg/voip/pwlib/libpt_linux_r.so __local_dl \
    $(if $(CONFIG_ULIBC),$(JMKE_BUILDDIR)/pkg/uclibc++/src/libuClibc++.so, \
       __local_stdc++)
endif

ifdef CONFIG_ZAPTEL
  JMK_LIBS+= $(JMKE_BUILDDIR)/pkg/voip/zaptel/libtonezone.so
endif

JMK_CFLAGS+=-DT38_SUPPORT
ifdef CONFIG_RG_VOIP_ASTERISK_CALLER_ID_PREFIX
  JMK_CFLAGS+=-DCALLER_ID_PREFIX=\"$(CONFIG_RG_VOIP_ASTERISK_CALLER_ID_PREFIX)\"
endif

$(JMKE_PWD_BUILD)/cli.o $(JMKE_PWD_BUILD)/asterisk.o: \
    $(JMKE_PWD_BUILD)/include/asterisk/version.h
$(JMKE_PWD_BUILD)/buildinfo.o: $(JMKE_PWD_BUILD)/include/asterisk/build.h

JMK_O_OBJS=io.o sched.o logger.o frame.o loader.o config.o channel.o \
  translate.o file.o say.o cli.o pbx.o md5.o term.o \
  ulaw.o alaw.o callerid.o fskmodem.o image.o app.o \
  cdr.o tdd.o acl.o rtp.o udptl.o manager.o asterisk.o ast_expr2.o \
  dsp.o chanvars.o indications.o autoservice.o db.o privacy.o \
  astmm.o enum.o srv.o dns.o aescrypt.o aestab.o aeskey.o \
  utils.o dnsmgr.o plc.o devicestate.o ast_expr2f.o slinfactory.o \
  buildinfo.o incall_announcement.o netsock2.o

JMK_CFLAGS_ast_expr2f.o+=-DYY_NO_INPUT

ifdef CONFIG_HW_DSP
  JMK_O_OBJS+=jdsp_common.o
endif

JMK_SUBDIRS=res pbx apps stdtime db1-ast channels editline

ifdef CONFIG_RG_VOIP_CALL_LOG
  JMK_SUBDIRS+=cdr
endif
ifdef CONFIG_RG_PBX
  JMK_SUBDIRS+=funcs
  JMK_LIBS+=$(ASTERISK_BUILDDIR)/funcs/libfuncs.a
  ifneq ($(CONFIG_RG_FULL_PBX)$(CONFIG_RG_VOIP_REDUCE_SUPPORT) \
      $(CONFIG_RG_CALLWAITPROV),)
    JMK_SUBDIRS+=formats
    JMK_LIBS+=$(ASTERISK_BUILDDIR)/formats/libformats.a
  endif
  ifneq ($(CONFIG_RG_FULL_PBX)$(CONFIG_RG_VOIP_REDUCE_SUPPORT)$(CONFIG_RG_VOIP_VOICEMAIL),)
    JMK_SUBDIRS+=sounds
  endif
  ifeq ($(CONFIG_RG_VOIP_VOICEMAIL)$(CONFIG_RG_SQLITE),yy)
    JMK_LIBS+=$(JMKE_BUILDDIR)/pkg/voip/libvoip_dbm.so \
      $(JMKE_BUILDDIR)/pkg/sqlite/libsqlite3.a
  endif
  ifneq (($CONFIG_RG_FULL_PBX)$(CONFIG_RG_3G_VOICE),)
    JMK_SUBDIRS+=codecs
    JMK_LIBS+=$(ASTERISK_BUILDDIR)/codecs/libcodecs.a
  endif
endif

JMK_YFLAGS+=--name-prefix=ast_yy

$(JMKE_PWD_BUILD)/include/asterisk/version.h \
    $(JMKE_PWD_BUILD)/include/asterisk/build.h:
    $(JMKE_PWD_BUILD)/include/asterisk/%.h: $(JMKE_PWD_SRC)/build_tools/make_%_h
	$< > $@.tmp
	if cmp -s $@.tmp $@ ; then echo ; else \
		mv $@.tmp $@ ; \
	fi
	rm -f $@.tmp

JMK_CLEAN+=include/asterisk/version.h include/asterisk/build.h ast_expr.c

JMK_RAMDISK_DIRS+=$(JMKE_RAMDISK_RW_DIR)$(ASTVARRUNDIR) \
  $(JMKE_RAMDISK_RW_DIR)$(ASTSPOOLDIR)/voicemail \
  $(JMKE_RAMDISK_RW_DIR)$(ASTSPOOLDIR)/tmp \
  $(JMKE_RAMDISK_RW_DIR)$(ASTVARLIBDIR) $(JMKE_RAMDISK_RW_DIR)$(ASTETCDIR)

ifeq ($(CONFIG_RG_SYSLOG_GLIBC),y)
    JMK_CFLAGS += -include $(JMK_ROOT)/pkg/syslog/glibc/ulibc_syslog.h
    JMK_LIBS=$(JMKE_BUILDDIR)/pkg/syslog/glibc/libulibc_syslog.a __local_resolv
endif

$(call JMKE_INCLUDE_RULES)
